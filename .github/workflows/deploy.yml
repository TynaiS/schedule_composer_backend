name: Deploy App

on:
  push:
    branches:
      - main
      

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set Variables
        id: set_vars
        run: |
          echo "IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/schedule_composer_backend:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
  test:
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/schedule_composer_backend:${{ github.sha }}
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run docker container
        run: |
          docker run -d --name test_container -p 8080:8080 $IMAGE_NAME
          sleep 5 
          docker ps -a

      - name: Check if container is running
        run: |
          if [ "$(docker inspect -f '{{.State.Running}}' test_container)" != "true" ]; then
            echo "Test Failed!"
            exit 1
          fi

      - name: Cleanup
        run: |
          docker stop test_container
          docker rm test_container

  deploy:
    runs-on: ubuntu-latest
    needs: test
    env: 
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/schedule_composer_backend:${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          echo "DOCKER_IMAGE=$IMAGE_NAME" > .env
        
      - name: Copy docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu"

      - name: Copy env file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ubuntu"

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo docker-compose --env-file .env down
            sudo docker-compose --env-file .env up -d --build
